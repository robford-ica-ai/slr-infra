version: '3.9'

services:
  # Frontend application - development mode
  web:
    build:
      context: ../slr-web-app
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - DOC_AI_SERVICE_URL=http://doc-ai:8000
      - VECTOR_DB_SERVICE_URL=http://vector-db:8001
      - QUARTO_SERVICE_URL=http://quarto-export:8002
      - N8N_BASE_URL=http://n8n:5678
      - NODE_ENV=development
    volumes:
      - ../slr-web-app:/app
      - /app/node_modules
    depends_on:
      - supabase
      - doc-ai
      - vector-db
      - quarto-export
      - n8n
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Supabase - same as production
  supabase:
    image: supabase/supabase-local
    ports:
      - "54321:54321"  # REST API
      - "54322:54322"  # Dashboard
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - supabase_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # n8n workflow automation - development mode
  n8n:
    build:
      context: ../slr-n8n-flows
      dockerfile: Dockerfile.dev
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - DOC_AI_SERVICE_URL=http://doc-ai:8000
      - VECTOR_DB_SERVICE_URL=http://vector-db:8001
      - QUARTO_SERVICE_URL=http://quarto-export:8002
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - NODE_ENV=development
    volumes:
      - ../slr-n8n-flows:/app
      - /app/node_modules
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Document AI Service - development mode
  doc-ai:
    build:
      context: ../slr-doc-ai
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/secrets/google-credentials.json
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - NODE_ENV=development
    volumes:
      - ../slr-doc-ai:/app
      - /app/node_modules
      - doc_ai_data:/app/data
      - ./secrets:/secrets:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Vector Database Service - development mode
  vector-db:
    build:
      context: ../slr-vector-db
      dockerfile: Dockerfile.dev
    ports:
      - "8001:8001"
    environment:
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - PINECONE_INDEX=${PINECONE_INDEX}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NODE_ENV=development
    volumes:
      - ../slr-vector-db:/app
      - /app/node_modules
      - vector_db_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Quarto Export Service - development mode
  quarto-export:
    build:
      context: ../slr-quarto
      dockerfile: Dockerfile.dev
    ports:
      - "8002:8002"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - NODE_ENV=development
    volumes:
      - ../slr-quarto:/app
      - /app/node_modules
      - quarto_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  supabase_data:
  n8n_data:
  doc_ai_data:
  vector_db_data:
  quarto_data: 